6. 객체형(Object)
자바스크립트의 기본 타입입니다. 객체란 실생활에서 우리가 인식할 수 있는 사물을 프로그래밍에서 메모리에 저장하는 형태를 말합니다. 객체는 여러 프로퍼티나 메소드를 같은 이름으로 묶어놓은 일종의 집합체입니다.


자바스크립트의 타입 변환

자바스크립트의 변수는 타입이 고정되어 있지 않으며, 같은 변수에 다른 타입의 값을 대입할 수 있습니다.

let a = 10;	// number
...
a = "JavaScript";	// String

1. 묵시적 타입 변환
자바스크립트에서는 특정 타입의 값을 기대하는 곳에 다른 타입의 값이 오면, 자동으로 타입을 변환해서 사용합니다.

let a = "10";
let b = "20";
let result = a + b;	// 1020
result = a - b;		// -10 
let c = "문자";
result = a - c;		// NaN

* NaN(Not a Number) : 정의되지 않은 값이나 표현할 수 없는 값이라는 의미입니다. NaN은 number 타입의 값으로 0을 0으로 나누거나, 숫자로 변환할 수 없는 연산을 시도하는 경우 반환됩니다.


2. 명시적 타입 변환
자바스크립트는 자동으로 타입 변환을 사용하지만, 명시적으로 타입을 변환할 방법도 제공합니다.

Number() : 문자를 숫자로 변환합니다.
String() : 숫자나, 불린등의 자료를 문자형으로 변환합니다.
Boolean() : 문자나 숫자등의 자료를 불린형으로 변환합니다.
Object() : 모든 자료형을 객체형으로 변환합니다.
parseInt() : 문자를 int형으로 변환합니다. (정수)
parseFloat() : 문자를 float형으로 변환합니다. (소수)


자바스크립트의 대화상자

window.alert() : 사용자에게 메세지를 보여주고, 확인을 기다립니다.
window.confirm() : 사용자에게 메세지를 보여주고, 확인이나 취소를 누르면 그 결과를 불린값으로 반환합니다.
window.prompt() : 사용자에게 메세지를 보여주고, 사용자가 입력한 문자열을 반환합니다.


연산자(Operator)

1. 산술 연산자
산술 연산자는 사칙연산을 다루는 가장 기본적인 연산자입니다.

+ : 덧셈
- : 뺄셈
* : 곱셈
/ : 나눗셈
% : 나눈 나머지 값 (예: 10 % 3 = 1)
** : 거듭제곱

2. 비교 연산자
비교 연산자는 피연산자 사이의 상대적인 크기를 판단하여 참 또는 거짓을 반환합니다.

> : 왼쪽의 값이 오른쪽의 값보다 크면 참을 반환합니다.
< : 오른쪽의 값이 왼쪽의 값보다 크면 참을 반환합니다.
>= : 왼쪽의 값이 오른쪽의 값보다 크거나 같으면 참을 반환합니다.
<= : 오른쪽의 값이 왼쪽의 값보다 크거나 같으면 참을 반환합니다.
== : 두 식의 값이 같으면 참을 반환합니다. (타입의 관계없이 "10" == 10 는 참)
=== : 두 식의 값이 같고, 타입까지 같으면 참을 반환합니다. ( "10" === 10 는 거짓)
!= : 두 식의 값이 다르면 참을 반환합니다. (타입의 관계없이 10 != 5 는 참)
!== : 두 식의 값이 같지 않고, 타입까지 같지 않으면 참을 반환합니다. ( 10 !== "1" 참)

3. 대입 연산자
대입 연산자는 변수에 값을 대입할 때 사용하는 연산자입니다.

= : 왼쪽 변수에 오른쪽 값을 대입합니다.
+= : 왼쪽 변수에 오른쪽 값을 더한 후, 그 결과를 다시 왼쪽 변수에 대입합니다.
예) 
let a = 10;
a += 1; // a = a + 1;
a -= 1  // a = a - 1;
-= : 왼쪽 변수에 오른쪽 값을 뺀 후, 그 결과를 다시 왼쪽 변수에 대입합니다.
*= : 왼쪽 변수에 오른쪽 값을 곱한 후, 그 결과를 다시 왼쪽 변수에 대입합니다.
/= : 왼쪽 변수에 오른쪽 값을 나눈 후, 그 결과를 다시 왼쪽 변수에 대입합니다.
%= : 왼쪽 변수에 오른쪽 값을 나눈 나머지 값을 구한 후, 그 결과를 다시 왼쪽 변수에 대입합니다.
**= : 왼쪽 변수에 오른쪽 값을 거듭제곱 후, 그 결과를 다시 왼쪽 변수에 대입합니다.

4. 증감 연산자
증감 연산자는 값을 1식 증가하거나 혹은 감소시킬 때 사용하는 연산자입니다. 연산자가 어느 쪽에 위치하는거에 따라 연산자의 순서 및 결과가 달라집니다.

++변수 : 변수의 값을 1증가시킨 후, 다음 연산을 진행합니다.
변수++ : 먼저 다른 연산을 수행한 후, 변수의 값을 1증가 시킵니다.
--변수 : 변수의 값을 1감소시킨 후, 다음 연산을 진행합니다.
변수-- : 먼저 다른 연산을 수행한 후, 변수의 값을 1감소 시킵니다.

let a = 5;
++a;	// a = a + 1; a++;

let a = 5;
let b = ++a;	// b = 6;

let a = 5;
let b = a++;	// b = 5;
console.log(a);	// 6
console.log(a); // 5


5. 논리 연산자
논리 연산자는 주어진 논리식을 판단하여 참과 거짓을 반환합니다.

AND 연산 : 두 논리식이 모두 참이면 참을 반환하는 연산자입니다.

A	&&	 B		결과
true		true		true
true		false		false
false		true		false
false		false		false

apple / 1111

아이디 : [ apple	]
비밀번호 : [ 1112	]
   로그인

	true		 false    
아이디 == "apple" && 비밀번호 == "1112"	--> false(로그인 X)

OR 연산 : 두 논리식 중 하나라도 참이면 참을 반환하는 연산자입니다.

A	||	 B		결과
true		true		true
true		false		true
false		true		true
false		false		false


NOT 연산 : 논리식의 결과가 참이면 거짓으로, 거짓이면 참으로 변환하는 연산자입니다.

A	!결과
true	false
false	true

let b1 = true;
console.log(!b1);	// false;


6. 비트 연산자
비트 연산자는 논리 연산자와 비슷하지만 비트 단위로 논리 연산을 수행합니다.

& : 대응되는 비트가 모두 참이면 참을 반환하는 연산자입니다.
| : 대응되는 비트 중에서 하나라도 참이면 참을 반환하는 연산자입니다.
^ : 대응되는 비트가 서로 다른면 참을 반환하는 연산자입니다.
<< : 지정한 수만큼 비트를 왼쪽으로 이동시킵니다.
>> : 지정한 수만큼 비트를 오른쪽으로 이동시킵니다.

bit : 컴퓨터의 용량의 최소단위입니다. 0 또는 1을 저장하는 단위입니다.
byte : 1byte는 8비트입니다.
KB(킬로바이트) : 1KB는 1024byte 입니다.
MB(메가바이트) : 1MB는 1024KB 입니다.
GB(기가바이트) : 1GB는 1024MB 입니다.
TB(테라바이트) : 1TB는 1024GB 입니다.
PB(페타바이트) : 1PB는 1024TB 입니다.

25 & 18 = 16
128	64	32	16	8	4	2	1
			1	1	0	0	1	(25)
&			1	0	0	1	0	(18)
---------------------------------------------------------------------
			1	0	0	0	0	(16)

25 | 18 = 27
128	64	32	16	8	4	2	1
			1	1	0	0	1	(25)
|			1	0	0	1	0	(18)
---------------------------------------------------------------------
			1	1	0	1	1	(27)

25 ^ 18 = 11
128	64	32	16	8	4	2	1
			1	1	0	0	1	(25)
^			1	0	0	1	0	(18)
---------------------------------------------------------------------
			0	1	0	1	1	(11)

25 << 2 = 100
	1	1	0	0	1	0	0	(100)

25 >> 2 = 6
					1	1	0	(6)


7. 삼항 연산자
조건식에 따른 참, 거짓에 따라 반환값이 달라지는 연산자입니다.
예)
변수 = 조건식 ? 반환값1 : 반환값2;
	      -----   ------
	      true     false


과제
아래와 같은 형식의 자료를 받아 출력하는 프로그램을 만들어보자.

입력예시) prompt로 입력
이름을 입력하세요.
HTML 점수를 입력하세요.
CSS 점수를 입력하세요.
JavaScript 점수를 입력하세요.

출력예시) console로 출력
XXX 님 성적
HTML : XXX점
CSS : XXX점
JavaScript : XXX점
총점 : XXX점
평균 : XXX점













