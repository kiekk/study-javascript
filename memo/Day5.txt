객체(Object)

키(key)와 값(value)으로 구성된 프로퍼티(property)들의 집합입니다. 프로퍼티의 값은 자바스크립트에서 사용할 수 있는 모든 값을 담을 수 있습니다.

배열
const student = ['김사과','반하나','오렌지'];

객체
const student = {num: 1, name: '김사과', kor:90, math:100, eng:60}

프로퍼티(property)

프로퍼티는 키(이름)와 프로퍼티 값으로 구성됩니다. 키로 유일하게 값을 식별할 수 있습니다. 프로퍼티 키는
프로퍼티를 식별하기 위한 식별자이며, 프로퍼티 값으로 사용할 수 있는 값은 빈 문자열을 포함하는 모든 문자열 또는 symbol값입니다.

객체를 생성하는 방법

1. 리터럴 표기법을 이용한 객체의 생성
자바스크립트에서 객체를 생성하는 가장 쉽고, 간단한 방법입니다.

const 객체이름 = {
	프로퍼티명1 : 값1,
	프로퍼티명2: 값2,
	....
	프로퍼티명n : function(){

	}
	...
}

2. 생성자를 이용한 객체의 생성
new 연산자를 사용하여 객체를 생성하고 초기화 할 수 있습니다. 이 때 사용되는 메소드를 생성자라고 하며
이 메소드는 새롭게 생성되는 객체를 초기화하는 역할을 합니다.

function 생성자이름(매개변수1, 매개변수2 ..){
	프로퍼티이름1 = 값2;
	프로퍼티이름2 = 값2;
	....
	프로퍼티이름n = function(){
	
	}
}

const 객체이름1 = new 생성자이름(값1, 값2 ..);


*프로토타입(prototype)
자바스크립트의 모든 객체는 프로토타입이라는 객체를 가지고 있습니다.
모든 객체는 그들의 프로토타입으로 부터 프로퍼티와 메소드를 상속받습니다. 이처럼 자바스크립트의 모든 객체는 최소한 하나 이상의 다른 객체로부터 상속을 받으며, 이 때 상속되는 정보를 제공하는 객체를 프로토타입이라고 합니다.

3. 클래스를 이용한 객체의 생성

const 변수명 = class{
	 	constructor(매개변수1, 매개변수2..){
			프로퍼티이름1 = 값1;
		프로퍼티이름2 = 값2;
			...
		}
		메소드이름(매개변수1, 매개변수2..){
			...
		}
	       }

const 객체이름 = new 변수명(값1, 값2 ...);

const 계좌정보 = class {
	constructor(계좌번호, 이름, 통장이름, ...){
		this.계좌번호 = 계좌번호;
		this.이름 = 이름;
		this.통장이름 = 통장이름;
		this.담당자 = 담당자;
		this.금액 = 금액;
	}
	function set금액(price){
		if(price < 0){
			경고메세지
		}else {
			this.price = price;
		}
		
	}
}

const 김사과계좌 = 계좌정보('111-11-11111','김사과','저축통장'..)

내장 객체

Math 객체
Math 객체는 수학에서 자주 사용하는 상수와 함수들을 미리 구현해 놓은 자바스크립트 표준 내장 객체입니다.

min() : 인수로 전달받은 값 중에서 가장 작은 수를 리턴합니다. 인수가 전달되지 않으면 infinity를 리턴합니다.
또한 비교할 수 없는 값이 포함되어 있으면 NaN을 리턴합니다.
max() : 인수로 전달받은 값 중에서 가장 큰 수를 리턴합니다. 인수가 전달되지 않으면 -infinity를 리턴합니다.
또한 비교할 수 없는 값이 포함되어 있으면 NaN을 리턴합니다.
round() : 인수로 전달 받은 값을 소수점 첫번째 자리에서 반올림하여 그 결과를 리턴합니다.
floor() : 인수로 전달 받은 값과 같거나 작은 수 중에서 가장 큰 정수를 리턴합니다.
ceil() : 인수로 전달 받은 갑소가 같거나 큰 수 중에서 가장 작은 정수를 리턴합니다.
random() : 0보다 크거나 같고 1보다 작은 무작위의 소수를 리턴합니다.

String 객체
자바스크립트에서 문자열을 손쉽게 만들 수 있는 객체입니다.
또한 문자열을 쉽게 다룰 수 있습니다.

const str = 'JavaScript';

*문자열의 길이는 length 프로퍼티에 저장됩니다.

String 객체 메소드
indexOf('a') : 특정 문자나 문자열이 처음으로 등장하는 위치를 리턴합니다.
charAt() : 특정 문자열에서 전달 받은 인덱스에 위치한 문자를 리턴합니다.
includes() : 특정 문자열에서 전달 받은 문자열이 포함되어 있는지 여부를 리턴합니다.
substring() : 전달 받은 시작 인덱스 부터 종료 인덱스 바로 앞까지 문자열을 추출하여 새로운 문자열을 리턴합니다.
substr() : 전달받은 시작 인덱스부터 전달받은 개수만큼 문자열을 추출하여 새로운 문자열을 리턴합니다.
split() : 구분자를 기준으로 나눈 후 나뉜 문자열을 하나의 배열에 저장합니다.
replace() : 원본 문자열의 일부를 전달받은 문자열로 치환합니다.
trim() : 문자열의 앞뒤 공백을 제거합니다.
toUpperCase() : 영문자 중 소문자를 모두 대문자로 변환합니다.
toLowerCase() : 영문자 중 대문자를 모두 소문자로 변환합니다.
