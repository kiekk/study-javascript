문서 객체 모델(Document Object Model)
XML이나 HTML 문서에 접근하기 위한 일종의 인터페이스입니다.
이 객체 모델은 문서내의 모든 요소를 정의하고, 각각의 요소에 접근하는 방법을 제공합니다.

<html lang="en">
<head>
    <title>간단한 HTML 문서</title>
</head>
<body>
    <h2>HTML 문서</h2>
    <img src="apple.png">
</body>
</html>

document 
웹 페이지 그 자체를 의미합니다. 웹 페이지에 존재하는 HTML 요소에
접근하고자 할 때 반드시 document 객체로부터 시작해야 합니다.

메소드
getElementsByTagName() :  해당 태그 이름의 요소를 모두 선택합니다.
document.getElementsByTagName('p')

getElementById() : 해당 아이디의 요소를 선택합니다.
getElementsByClassName() : 해당 클래스에 속한 요소를 모두 선택합니다.
getElementsByName() : 해당 name 속성값을 가지는 요소를 모두 선택합니다.
querySelectorAll() : 해당 선택자로 선택되는 요소를 모두 선택합니다.


노드(node)
HTML DOM은 노드라고 불리는 계층적 단위에 정보를 저장합니다.
HTML DOM은 노드들을 정의하고, 그 사이의 관계를 설명해주는 역할을 합니다. HTML 문서의 정보는 노드 트리라고 불리는 계층적 구조에 저장됩니다. 노드 트리는 노드들의 집합이며 노드간의 관계를 보여줍니다. 노드 트리는 최상위 레벨인 루트 노드로부터 시작하고, 가장 낮은 레벨인 텍스트 노드까지 내려갑니다. HTML DOM을 이용하여 노드 트리에 포함된 모든 노드에 접근할 수 있습니다.

노드 종류
문서 노드(document node) : 문서 전체를 나타내는 노드
요소 노드(element node) : HTML 요소는 요소 노드이며, 속성 노드를 가질 수 있는 유일한 노드입니다.
속성 노드(attribute node) : HTML 요소의 속성은 속성 노드이며, 요소 노드에 관한 정보를 가지고 있습니다. 하지만 해당 요소 노드의 자식 노드에는 포함되지 않습니다.
텍스트 노드(text node) : HTML 문서의 모든 텍스트는 텍스트 노드입니다.
주석 노드(comment node) : HTML 문서의 모든 주석은 주석 노드입니다.

노드 간의 관계
parentNode : 부모 노드
childNodes : 자식 노드 리스트
firstChild : 첫번째 자식 노드
lastChild : 마지막 자식 노드
nextSibling : 다음 형제 노드
previousSibling : 이전 형제 노드

*빈 텍스트
익스플로러를 제외한 대부분의 브라우저는 요소와 요소 사이에 빈 공백 또는 개행이 이루어지면 텍스트노드로 처리됩니다. 따라서 노드간의 관계에 텍스트 노드가 중간에 사용되면 노드 이동이 불명확해 질 수 있습니다.

노드 추가
appendChild() : 새로운 노드를 해당 노드의 자식 노드 리스트 맨 마지막에 추가합니다.
insertBefore() : 새로운 노드를 특정 자식 노드 바로 앞에 추가합니다.
insertDate() : 새로운 노드를 텍스트 데이터에 새로운 텍스트로 추가합니다.

노드 생성
createElement() : 새로운 요소 노드를 만들 수 있습니다.
createAttribute() : 새로운 속성 노드를 만들 수 있습니다.
createTextNode() : 새로운 텍스트 노드를 만들 수 있습니다.

노드 제거
removeChild() : 자식 노드 리스트에서 특정 자식 노드를 제거합니다.성공적으로 노드가 제거되면 제거된 노드를 반환합니다. 노드가 제거될 때에는 제거되는 노드의 모든 자식들도 다같이 제거됩니다.
removeAttribute() : 속성의 이름을 이용하여 특정 속성 노드를 제거합니다.

노드 복제
cloneNode() : 기존의 존재하는 노드와 동일한 새로운 노드를 생성하여 반환합니다.

*복제할 노드.cloneNode(자식노드 복제여부);
-자식노드 복제여부 : 전달될 값이 true면 복제되는 노드의 모든 속성과 자식 노드도 같이 복제되고, false면 속성 노드만 복제하고 자식 노드를 복제하지 않습니다.

노드교체
replaceChild() : 기존의 요소 노드를 새로운 요소 노드로 교체할 수 있습니다.

*교체된 노드 = 부모노드.replaceChild(새로운 자식노드, 기존 자식노드)
replaceData() : 텍스트 노드의 텍스트 데이터를 바꿀 수 있습니다.
*텍스트노드.replaceData(오프셋, 교체할문자수, 새로운데이터);

폼(form) 객체
일반적인 폼에 접근할때 사용합니다. id 또는 name을 이용하여 접근합니다. 또한 documents.forms 컬렉션을 이용하여 접근할 수도 있습니다.

아이디 value 접근
const id = document.myform.userid.value;
